node {
  name: "dense_13_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 7
        }
      }
    }
  }
}
node {
  name: "dense_13/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
          dim {
            size: 30
          }
        }
        tensor_content: "Z\006\201\274\244\375\256\276\242`u\276R\306&\300\356J\013>\266q\021?s\270\311\276\202\347\221\276C!\354\274\007~\020\275~\202\216=\252\337\216\274wC\320>\255\345\301\275\205\004\204?\221\025\215\276E\001\222=\0071\346>N:#>\347\241\264>N\325\034>\r\226t>D\232\353\275-]\257> :3\275y$\236\276-\201u?\005\356\377\275+\373C>\216WC\276\317\256\252>u>\313\276b\225#>p\201\242=\225\374h\276d\273\214>\200\362\177>HQ]\275Zy>>H\226\204=\220\207\222<\333\245\322\275\235\363P?<:\264>\351C\002>\021\364\314\275\334*)\277c\276m=\313\356\232\275\322\"P\275,\326\250\275\034RN\275\334\227\343\275&tL\274\215w\235>\302\260\307=\000&\246\277\255\264s\276$\221\177>\253\"\274;[0\034=0\010\033=-\\\306>\234=\351\273\221\205x<\207\265\351<\212\205\252\276\377\247\213\276\332\004\353\273A\201\250\274\014@>\274\245\300\376;\\\230\361<K\235\261<\362\342\314\274+\2553>\200\007N\276?\333\220\277\340\256H\276Nd\302\273\030m9\275\350L\243=\344%|\274F\241\227\274\252n\037;\354R\277\275\275\010F\274\330\314\300=\"\237\004\275\323\350\210\276F\361\027>\347\235\225\276\376\270\203\277&\267\204\277n\024\255\2762\334N>\200\222\034\274\274XG>\253\n\253>fj\332\277\224\324\213>S\223Q\277\320\355\025>c\032\r?\253\351Z\300\016\332\247\276y\376\312\276\001\2361\277&}L>\223\312\221>\002\370\314<<-\227\276m\210\241>\306\321*?\272\335\221>\277\237\001\276\245\341\260<O\005m=%\034%?\230_\276\276\350\004%?v\215\201>\335\245\221\276%\030\305\274i\354g\276\370}\310>\362\334\271\276[\200\215\276tK\336>\332\327\010\277\321>L?\372d\245=\r\234\232\277\016#L\277\337\314\254\276\3468\211\2760\264\223\275{p\235=\300 \255\276W\2249\277\257\312Y?L\013I?\266\366\375\276\313<\002?\243\000_?\305\343\005=8\000x\276\331\230 ;\207pY=\007\337j<\307\323\271\276\313D\222\276\330\310\214\275\267\327\251\275\243\357\236>u\241S?\356H\264\276P\215W>-Hs\277_\226\272\276\232~\271\276\277qN\277\335\244:\276\036\345#?\307\226A?\032\335\010\276\311\217\020>#\246\003?I\246\375<\354\275c?\271\252C\277\346$V\277-\336>?s\275\211\277\374\361c\277tV\027\276\202@|\275\016po\276\367\322Y\277\001gz\274\351L\370\277\216\315B\276\337\220\226=\363\370b>\271Q[>\205\326\337>\304S\252=\300\242\000\276\317b\364\277\323\335\251\277b\033\321\277\274\262\220\277\203\"C>\341\204\325?7o2\274\322Ol>\331\2731?c\334\252\276\013\340|9\276\320\277?I\r\311\277\274\221\312\277\177\277\r@\355O\330\277\264\201\332\277r\273K\275\237\264\021\276L\323\225\276\232O\267\277\027`T="
      }
    }
  }
}
node {
  name: "dense_13/kernel/read"
  op: "Identity"
  input: "dense_13/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_13/kernel"
      }
    }
  }
}
node {
  name: "dense_13/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 30
          }
        }
        tensor_content: "\231j\003\277\000\000\000\000Q\334\000\275\356\353_?3KH\274}\220\256\277\000\000\000\000\000\000\000\000\347\234\223>\306\207\210?\270\236\266\276\205\315\202?\270\023\262>\256\026F>+\016\275\275\321\377\026\276\273\3771?\361\243\002\277\357\343\366\274\002\371\206=rRC\276a\347D\276$0\206=\341\301\226>qd\246\276\310_\312\273\377\355\365>\300?\344\273?\246\262>\307`\210<"
      }
    }
  }
}
node {
  name: "dense_13/bias/read"
  op: "Identity"
  input: "dense_13/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_13/bias"
      }
    }
  }
}
node {
  name: "dense_13/MatMul"
  op: "MatMul"
  input: "dense_13_input"
  input: "dense_13/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_13/BiasAdd"
  op: "BiasAdd"
  input: "dense_13/MatMul"
  input: "dense_13/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_13/Relu"
  op: "Relu"
  input: "dense_13/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_14/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 30
          }
          dim {
            size: 30
          }
        }
        tensor_content: "x\344[\276;\257\253>\014\033}\276\020Z\266\276#\275\016\277^\247\201\276R\200\352>\210\341\033>\277\027\306=\235\371\247<Sx\360=\250\202\212\273\020\331R=\224lD<\343+\214\276\020\323\317\276e\240]\277\261yS\277\0022\r>y\252\227:A\364\334>M`W\2768\275\026?\247u,?2\245[=\266\004\004?\317L\234=\213\345p\2769\025*?}\321\247\276\354o\n\276F*^\276\n6~>\324\2026>\275\274\034\276\264R\031>\010\330\242\275\374V\004\276\306\262R>b\"->\376\347\177>\221\002\n\276\312\344b>\312\202R>vH\212\276\036\371y\276\034^S\276\2257\235>\263\373\200>lu8\276\004c\205\276\315m\203>z\342\'\276s\010\017\276\3305\033>e\350y\276\0204q\275M\023F\276\n\254S>\352]\340\275m\331\222<3wk\275\305t\221=\267\345\202\276\200\216\205=\r\362\316>\204\020n\2740\n\305=\326\240\"\275\370\237 =&rF>&\346\337\274o\206}\275\3249\010>\374\251E=\261\034\177\276\225[\024>`\272\236>\260S\212\276&\256\006\275\233\031\023=\312C\271>\373\253\016\275\367{X?@V\332<\036\337j\273\251u =\333\303#=N\004Q?#)\206<w\2738\277\230\t\313=\346\005\226=\263i!\276\355\245|>X\026S?\026\342\231\275\232\244j>\250\231\215=(#\'?\030K\237\276\277\324\007\277\'[_\277\235H\302\275\245\024u\274R\367\207\276\377\013O\276\237\216\221\300\365n\236>\234\262w?\006\3476\277R\023P\274\325y\303>$\336v?U%\332=\365i\022\277\252\320\367>$\"\354\274CmM\274\220\0313\276\367\344\217\276\340\006\001\275H\220P=\360\204\240\276\022F{=\241.\223>f^\374=\204\021\314\272B\207S>^!|\2763\237\007\276$\004\032\276\354\267z\275\010\305\017\275?4U\275\210y^\276F%k\276\001}\023\276\242\222\330\275\307\334}>\024qg\276*R\241\276\35630>\377N\225\275(\013\201\276>\312\263\275\321\013#>\220rh\275m\371\326=!9\222>\275\030\232\277\017{U\277\335[\252\276\203\242@\276\364\036\262\275\3075\007?\257x\t\275\353\301\027\276c\270>\276\025!\010?\335\265U\276\002\265)?@\371S?\266+\016\275\327\304\\>*\202\233=2K\222=w\351\224\276%\305\024\276Z\344H\277p\267\270\275\302G\243>5\313W>\350\303\033\276\205\210\256\275\224R\223?e\372\253\276\222\223\200>xd\364>K\256\325\274f\ra>\036\371I\276\024&\307\275C\305\r\276\376\006Q>Z\315$>\305\231\232>\360\362\207\274\312\305m>\250R;\276\362\006\005\276\264\037\367=2\003\031>X\362\303=\\\256\024\276\300\314\334<ge\226>\3647r\276\362\242y>p#\330\275+\300A\276\367\276\216>\300\271\357;\000\334Z\273m\260\213>\021\352\024\276\275\371\212>\034=\232\275\30133\276?\355\200\276?\357[\276 \'\257=f\376Z\2761U\217>\032\275t>\305\300\204\276\200\263D\274\227\257\240\276\340\303\034<\032\267\274\275\322\262\020>\212!:>\200Y\265\273v\234l\276\"\373\334\275@\251\241\276LL\374=\306\303\222\276\214\204c\276\230\370,\275\254R\255=\266.`>CB\213\276\260\320\223\275\240\333i<\032\253\216\276qK\016\276\020\354\267\275\201$n\276\240G\361\275H\336l?K\332\352>)\236L\275PL\022=.\311\247>&\022\032?\370,k?\346\034\274\276\221\242\273\274fq\364\276}\377\213\275\005M\277=\201L\200=)\347\034>U\020\261\276\237\342f\276\316>\320\277\335\231.?8\034\330\275\005n\355>N]\261>\244\013\022\277\275\373\204>&$\213>^\014e?>\235V\276\224\030\271\276\2563\253\276\202\255\200>\227k\234\276\t\030\017>\222\251\241\276JJ\301\275\224[\217=\246\264N\273e)\213\276\357Q<\276\365\243\031?\240\220\000<$\025\323>\000\226\261\274X\243!?3\203\240=\273O\276=H\025&\277\221\376\240\276\222\347V?\377\0143?\366\n\313\275\337Bl>\026\227\022\276\211TE?\351\205\240>r^j\277\356\211+\277\300*\006\277\177\343K\277Q\2645>Hu-\277\251*\235>\2236\034\277\276\'\216\276<\312\260\2764\324\227\275\001%\034\277h\213^>V\036V\276YC\366\276\035\203\252\276\344\1770\276?\373\r\276\n\277\006?9Y\262>e\336\215>,\016\001\277W/\266\276I\300(\276,\220\233\277\214/^>\340\020\206=\376\350\020?\033!\037>\243\201\023?\212\243s\277v\002^;\235\3066>}\322\326\276\226h\010\277\333\227\n<3\'\214=9\016>?j\234\254>Jn\022\276Z\276P>d\265\311\276<\236\265\276\353h\360>\377\334\026?\022L\357=,\211#\277\234\201\244\276\010\210\202\275Z\177\007>\0343M\276I4\261=\320\340\207\275\257yO>X\254\336=H\226\241\276L6\253>\242\356\036>\272+I=\257QD\276\362\2550\275\311f\025\276\215\256\037\277\016\374\201?\377(\365\275\230\027\233\276\260)\224\276\367\005=?\267l~\276\346\220n>\301\346\351\274\024\361\220\276q\224\274=K&\030\275\351\314\207>\222\326\325\275&\332\264\276P\337\252\274\2652Z>eI\020>I\002\241\276>\240)\277\037\206\001>\016lF\274\0042\000?\3450\332\275\010Q\007\277\333`\242>\216\241\222\277y\367??\223\372@;\214\0058=\332+\266?\326\374\263\276\366\327B?\266\242\330>Z4\264\276:N\261\276\033\322U?X#\032\276\341\020\243\275\n\000#\277H\037]\277\372\341\007\277\241\317\005\277\027\206\203=\303&\200?:u\233\276ze\025\277\367\244$\277\034\221\260=C\376\203?\204\304\345\274jQ\007\276\'cL\276u1*=9\000k>\301x\270\276\310R\204\277\321>\237\277\270\357l?\246\216\272\275LR\317>\030\344\303\275\223\323\223?\363Pz?#\307j\275P\336\020\275\003\204\241\276\3737\207\276\r\357\246\276\007\314\036\275\350\310\360?$M\024@\362\034\007@\274\301\234\276\266I\034?\230C\203\276\221\312+>v\325\216>.\360\323\275\013P\273>\231\363\212\276\240\313\006?[e\200\276\267\244\205\276{\255\272\276\366A\376\276\3120\210?\372\255,>z\301x\276;\177(\2774\315`>rC\352?\330\275\020>Z@0?\226\212F>\226BZ\276E&\n\276\301\306^\273b\323%\276\253\244E=\276Cp\276\235`D<\272\376\271=\220\2459\275a\356;\276\230f\254=\346\243\354\274zC\307=\301H<=\017{\022\276\247\244#\276\204(<>2\243K\276mI\013\2769G6>\336\035\262<\312>\217\275pc*>|.G>S\2551\276kr\340\273V@4=\260`\030\275\306fC>?\307\236\276s\303&>\267QK\276\374\243V=\245C\006\276,D\002>\273\330\202\275O@\340=\346em\276\356\014|\276\257\306\213\275\334[3\276M\022\303>\326\241k>1\212*\276\231\247]<c\305\201=\202\372\214?\211\302&\277\364\353`>\313\037\214>!\256\277=^p;=\022\275\373\275\366\336\207\277\205\025#\276\266\001\223\276 \376W\276V\342\021>R\020\266\277\240\347\211\276\354B\304\275\r\250\375< er\275\2645\030>\375+\350;\034\361\204\275\347\352c\275q%\226=@\036\031\275$\206\252=-\237\212>\253\3507\276\327E\335\275\361\220$\276\313\202g\275g\374\030>\272\314,\277\211\240\271\276\371\311o\275A\300\372\275 R\311=\025#\006=g\221\002>c\375\000?\031\017\222\275\263z\212>\350+\271=?\241*=\226\205 ?\266\2530>\014\241\001>/:1=\000\211$\275\2431\241\276{6s\276\002x\024\276\027\212\256=\346\336\"<\366\321(\276\203\205\207\276\306Nz>O\370\033=\247\304\031\276DB\252\275\002\201s\276\360\007#\276b\275\217>\366\224\023>\334\367\225\276K>\210\276r\031\353\275R\302\225\276T7B\276\363\016%\275\020\031q\276\364\315\212\275{\351\232\276D\362\036\275i\350=>\2725\200\276\204l\026\276%y\251\277\237\223\320\274\345\231\255\276#\223m?\\\242\210?\353\316\344\276\3311\376\277%7w>\266\213\"?\307[\257;\360\321m\276\214\251\026;\010\251\330\274\276\220A?\301\257\366=\266\357\257\274B\242\253\275(SJ\276\305\221\372\277\210\027\321\276rl\212\276\363\330\033\277f\326l>\362\325!\276\264e\332>z\036\213\277\007o ?\356\010\252> &\'=\275\241\350=D\2358>V\250\000<0\226{\275\205\234o=az\013\277:\300U?/\246r\277\010\006\030>x\353#\277M\272\324\275\033\223\202?\221Ly?~%\237\276E\216\212\277\251\017z\276\320\033\031>v[\034\276R`\301\276<\341\010\276\213\222x?\'u[?\323:~?\356Fe\277 \345:?\020#s=f\205\205\277\263~9\277\327\242\232\277\243\315$\276\320\034D>\350\020f\277\267\335\256=\276\261>>B\241g?\333W\226>\273\024z?\365\364\250\276\225\275\220\276Hg\"\277\375\030\332=\300\305\271\275,\240\215>\300!\036\275(Ce\277\366\340\242=L\202\005\300pJ\004?\366\005\321\274\232\260\220;\002\221p?\306/o?\257\370e?D\030K? \301\236>+3\362\275\353\"D=\216\017\361\276H}\276?j\363\000=\374U\037\277\354\274c\276~N=\274*C\\>\341\227\025\277\364@\374>\331\027\375\277&L\323\276R\237\204\276 \"2?4\316\342=\255\317m\276D\031\003=\274\320x\276\320\301,? \257j>O\352W?\0275W\300\0353\376\275b\217\316=\037\204\300\276O\217\377\276\224\326\363\276\302\243~\277\350\305\005\277\301\\\021\275\210U\222<\370#\267>\302\276\243>.\2656>\371\2214?)\374B\277\336\315\300\276{\364\232\276\000\232n?\253\343_\300\362\356\310>\\\345\014\300F\014\207\276\010:\342\276\221\243a\275X\0261>\315\231I>\246\020\253\276\371\327\'\276Q\266[\276\233\355\336\276\003\205\016?\325#\313<_\244\353\277\325\365\007?\354\213o<\243\240\240=\320\367\304>\275\237H?\031\033[\276\n9\330\277\252\217H\276\251\267(\277\332w\273\276\3124a\277\324r4?\216n\330=\302\312\252\276n\356\331\277\274\006\250\277\256\310(\277\320\263\362\276\234\361\217\276\252t\276\277\372\010\346\275R\271\226?\342\227\242?\234sJ\275C\356\210\277\226\217\255\276mC\254\277Kz?\277\227]\233\276\005\004Z>\025~\303?m\252H?h\010\225?J)\\\276\305\207\351?\352\3114\277\373\343\201\276\305@\314\277\3363\325\275B(\274<\362\217U>\033\343\022\276\222\023\225\276\330\223\234\276\014\232\256=\000P\312\271\315l\213\276\236\251\323=\200x\222\273\r\201\203>\340\005\375<\233<\234=V\320\274\2720\t\253\274GrG>\304\347`\276\320\023\202=F\356\240\275f\257J>\220e{=?Bx>\302\324\022\276\205\354\230>\027\216\023\276\233\213\265\274`1\275:\264\371\335;:`&\275\264\200W\276xpv=!\363\335=0<6\276\322-T>\'\036\035=\257\nw=C\327B\277\275\n\037\277\322\370\252;r\230^>\022;b\2760\366\202>\353\267)\276\265\013\007\276\246\367\243\276\"f\021\276V\252_>\"\263\t\277Q\363\335\276\027\026H\276\372\036\332?\324\374\036\276\317\t\272\276\371\273\233\275\351\260\341\276bdD>\345\331\364\275b\360\245\276\356=\n>\312\342\331\276\245\221\n<\014tJ\276\315Nd=V\003\370\274X\241\237\276b\037\235>\340\341\230\276\0075G\275\220\214+><\033\203=\321\215\020\276L\203o\274\004\206\263<\212\264\214=z,<\275 \276\222\276\302Q\222\276S@\221\276t\217\316=C\313?\276U\374z>\262Ze\276\343\303\220\276\364\203/\276;\272r>\354d\005\274\002\360\274>\243\322\213<\366f\316=\002\030B\276\026l\200>S\004M\274w\236\254\275\314V1\276\322\343d>\341\r\217\276r\216\003\300\220!\237>J\334\356\276\211\002\035\276sd\327\275X\033s\276\010\032q\276\213t\231\276\227\372k=\325\3179\276\031\010\214\276\316\351\317\277)\367|?\2633\233\276\365y\203>_\035\217\275Z\371\342=\247\347\234>=\307\"?\220\034\327>\216r=;f\\*\2754\237\202>\003\220\353>J\217\267\275*e\035\276\256L\007\276`b\214\276\262\332\270\275\336\034D>\347\357S\275\254\023\222=\212\030\277\275\024W\350=\257\207\223>\032!F>\331\022h=\307\356v>\352\237K\276\260\332\260=\334\241\233=Yj\227>Z\2464>\331\030\203\276\240>\204\275 \206\262\276\351\207\006\2768\364\266\2759u\245>\365\310~\276Uh\202\276,\211:\2749\355\315=34$>\265E\370\274"
      }
    }
  }
}
node {
  name: "dense_14/kernel/read"
  op: "Identity"
  input: "dense_14/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_14/kernel"
      }
    }
  }
}
node {
  name: "dense_14/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 30
          }
        }
        tensor_content: "n\274\207?L\233&?y-~\275\362b\201\275\376\004\216>xV\007\277\'n,\276\"\205\352\275\n\022\002\275\376\367y=\306,\r\275\266\266\"\2779\237\001\277P\325$\275\333\251\247>\215\237\003\276&W\330>\267\327\274\276 \203\200\275:p\"?\363\031+\276\007\335h\276\2208\346\276\357\305\312=\212\251/\276 \216\016\277\256~1\275p%\253>`\363\351\276\000~\263\275"
      }
    }
  }
}
node {
  name: "dense_14/bias/read"
  op: "Identity"
  input: "dense_14/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_14/bias"
      }
    }
  }
}
node {
  name: "dense_14/MatMul"
  op: "MatMul"
  input: "dense_13/Relu"
  input: "dense_14/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_14/BiasAdd"
  op: "BiasAdd"
  input: "dense_14/MatMul"
  input: "dense_14/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_14/Relu"
  op: "Relu"
  input: "dense_14/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_15/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 30
          }
          dim {
            size: 30
          }
        }
        tensor_content: "V\225\244=\243\301/\277\372\366s\277\305\237,\275\020\032\213\277\010Z\204?\371NE\300s0\336\276\001`\006\276\335\311\232\276\252T\204>\326\313\323\277\311\204\332\276u\357\371<E\231\027\276\364N]\276\363\"\237>\205[\277\275\376\270\351\276\326\177\212?\361g\003\276(A\232\276\004j\032\276\312|3?\307\356\001\277\246\365\327\275U\217L\276n\355\221=\236\215\235\277\314\300R>\325\005\345\275\367n\377\276}\363\230?\t\013\317=\352>z?\245\177\253>\265_\274\277Q\312x\276M.t?\254H\247=nj\327=Ci\037\277\034\034\352>\311P\223\275\362A\310\274\014\360\223>\367\267\370>\267\254\031>\3775\243\276\223\324\252>\200\202\200\273\344z\213\276\ne\240\275\255J\367\276\355\304\367\275\257Z ?\353N\217\276\270\0166\276}\ts\277\016\221\272\276\361\224\211>&\242=\276\352o\027\276\036\263j>\321\330\177\276er\275\274\001(\010>\322\2773=\210\365o\275Q\277\236>a\267q>\246\275\002\275\2406\325<\224\275:>\236fe\276\246\004E>L\037M>T\016\016>\021\177\016\276\335\022\022\276\317 \024\276\371T\"\276c\254\233>\274~=>V\324#>\250\315\024>\320\'\331=\222\355\004\275\331\336\225>A\217\203\276p\005t\275\375q\226>\212r\232\276l\246\215\276\305\033\006>\271\307\014\276\316\001Q>\"\240x\275Lt\256=f\255\025>8l\237>|bN\276\244q\225\276\340\263\033>0\3270\276\020\027\025\276!e\231\276,h\315\275`\367\r\274a\311\214\276(\250\026=\230\033@=\021s\207>\030n\271\275<\247\361=\243\271\214\276\250\r\273=\261}b>\016=U\276\243\243}>\010(\313=\177\275\r\277_\304\\\276\327s\201\2750\225\317><\215\316>\021&\243\276`c\273\276(\223\343=\330\236\237\276<G\350=\003\004\275\276\264*\254>\311\t\223\276\230`\215\275\245w\275\276[\237\344\276\3606[>\274\373\357=Fg\t\275\002\002\370=G\301\232\275\314\273\010\276-\226q\277\267\231\324\275r\220\355>\000\020\257\275(\303\204\276ZD~\277\371\034\266=\t\376B\276\310\347\250=y\352\346\277\t\005A>\267\021a\277u\315\217>\236\213\247\276\225\361B\277\317B\242\277r\341\260\275\333\264!\300\254t\264\277u\203\354\277\354P\310>\337YW\277\177Y\350\277g\024\315\276\255Rh\276\244.\256\275\346\262\033\300p\2369\276\r\343\360;\265^\037>\376\264\266>~\247\225>\201\337\253\276X\374?=`\361\320?W \342?^d\240?j$\362\275\276_>>\251!\272>\2112!\276\232\'\n?\264$,>\246\026m??+\030>\'\217N\300J,\200=\357j\211\275\343I\034?.\363\227\277)yU\276_\034B\275\350\266\300\277+\"_\274\rV\236\275m~\255\2763\335\366\277\022\337.\276\331#\245\276\310\227\200\276\310\2171\276\351\234\253?\227\230\250>mq\355=\275\311\236?e\244\225>\202T\235>\\\030\r>\325\360\363\275\0257\026\300\257\354\305\276@%E\277\376D\247>\2475|\277w\236\335>\030\361\016\300\030t\004>\036\272\"\276\266\377+?*\002\375\276\245\363\253?\233\207\303>\372Ou\300~3\211\276\260VY=\320\004\366\275Bsx\276m\231\001=\020\300\325<3\230\232\276\217\277{\277\336\372(\277\260\372G\300y\263\250\274\265\331\241?T\374I@H\215 ?\032,V\276\020\022\227=\023\336\204>\336\316>>\222\305]>N3\204=\351\316^\276\006\312C\276n\253a\276(\363{=\\~\200\276\202Lh>\200W\033\274\363t\201>\312\374|>\203t|>\271\356\222>\000\350/\271`\251\035>\356<h>_\327A\276\212\254X>\000\274^\274P2C\275&\034%>\005`\022\2766\021\220\275\213\350q\276\300\002\014\275\0018\237>^\261A\275\031\341F\276\214\375(?\213\372\240\276\177_\020\277T\376\036\277\346vZ?3\021\205?\223\351\020=\371D\021\275\300\334\t?\347\2412?\372\234t=W\372\213\275\027\314/\277\230\251\'\276|\203\256?Q+\036\276\373\360n\276\253\320^\277\356\037\006>\"\277;\276\253\022\213\275q\363y\276\031\023)??<\254\276\304\255\215=\357\004\256=\230\314_?q?|\277 \216\213>i=V>\246\260\211=\221\276\021\276\242<\376<\206\212\024>\242\323\370\275+\2357\275[ZV\276x,k\276-\344\n=r\030\262\275\233\331>\276\027\2159\275\275\002o>\020\377f=G\r\246\274\326zq>\270g\227\275H\251V\275\350\003\227=\236^\351\275\312\300P>M\310\217\276\247\227\202\276L\270\253<e\365.\276mEj\276rCa\276q\350\223>w\251\332=\215]!?\354\244\"\275\277#%>\t\341\362=\032\306\032\277\350\210b?h\343e\276\023\205]\277 C\301\274\201\356+\276\345\3460?\336j\332\275\206\033\343>k\334q>\366\216\252?\364\374\343\276\304\3113>\333\'\215\276\356\010\234=\237\323u\276:y%\2768\261\223\276\241;\365>\241=\272\275\225\343<\276\322\006t\276u\037#\275\205\354;?\020\365v>\250\220\253=\303\371\347>\377\362\227>\372u\037\276\216\202\272\276\317\363R\277S\216s?-f\324>}\017\266\276\255E\243\276\371\204\306\275\024\021\346>2\374\343=\250\374\314>M\270\346>\004\r\222\276\262w\226>\312\023U\276\374T\366\274\2500\330>+\276.<:\231\212\276\226\253z\276c``=v\307\312>\200;\335> \223f\2763\240\'>f\337\375>@.\'\274&6\006>x\367n>\346\361\301\275J\262\233\276\004\"\212=h!M=\371r)=\373\353\307\274q$\301\274\277`\231>\244\006G\276A\214\277;,\366\264=\320\264\035\276\270\337b>\321\027e>u\230D\275\221\036\234\276p\217\032=\240\035\271\2740\336\017=,\364\210=`G|\276\r|\014\2767\"N\276\r\233Y>q\321\224>J2\202\276\332i@>\310\272@\276\354\357\303\276\020h\236\277j\005\327\274\265\366\225\276\027\256\270\274\274\302\224\276\'\337\371>;!n?\206\321!\277U_\336\275\325(\266?\257\370\016?\262\275V>\327\030\274\277\\\301\177>\215\340K\276\3301K?N\362T\276g\030\307\276\217\235\204\277\253\376&\275\272\177L\273\266\352\267\276[\221\032?\320\275/>\261\253\025>\300g\265\276\177(c\276t\345\211>Y\337\304\277-V\251=\027\374\214=\254\334\020\276|\334L\275\274\017C>\017\357\216=\216}w=\272\003\220>\037iZ>\360\003X\275V\330\216<#\215v\276\200\206\033\276\231\n\000>\377@P\276\254\354\037>]l@\275D\233D\276r\341\215\275\232\341m\276\221\225\212>\003G\236>\326!\\>vD\220>\000B\304\275\330\n\\=\262\350P>\024-Y>N\307\024\276I\267F>RA\242\276\356n\255\275\023\242\301\275y\227\200>1Zd>\237!N>_\375\226>Z\234b?(&a\277K\022\274\275\224\003\325\275\341\354S>\213\031\221\277\022\213\024>\034\255\034\277\333\233\\>ZgD?~\270;\276\275\310D>\311\250w=\377O\315=\342\017V>\034\236\313=\234\253\363\275(\344\261>\254u\320\276\225\013\032=\314\273\317?(\276g?\240\036\310=\352\305\035>\010\332\272\274\244({?\353\251[\276\223\347\306\277\373\334\n?\331\220\216=+\270\255\276\214\277\037?\362\034\360\275\330\357\350\276\007<,@\002\257a\277$\030;=\017\374\241\275\004\365\272?>l\363\276\370\3572=\010\272\\\275Q\333\213?\032\036N\276\370O6=\2203\362<ep\336\276\202 3>\265\360\202\276\323D^>\254c\313\273\366&\366\276O/!\277\030\3031>\301u\202>\376\2531\276\250\221\006\276\303%\236\276\253\3627\276\213\003F\275\021\352\021>\245\n\243\274\314\275\241=S\357\204>\347z\203=\260\262w\276bs\221\275\177\006\272\275~\224d\276gXV>\265+/\276=\024\201>^4\300\275\212=\335\275\303~\240\276\376WN>\351\226\212\274\301\273F>\252t\272\275\254b\226\275\351,\256>\311\302^\276G\246\225=\t\306\246\276 \222\204\275\017\022\324>\332\003\243\276\ta\275>\242\204\'?O\342\014\277\215\343\032\276[\273g\276NjE\275<D\375\275\264Gw\277X\270.\276\376\023\001\276XE\032\276\234>\200?D.\344\276\324\321\346=\352\334\013>\342\373\016\277\010\306\240\276a\250\201<\314\303\242=(\267\234\277\327r-\275u\277K\277\304\354\265=\334\377r\276\377\363\022\277#\300\311=\302q\225\276\305\317\024?\273\021t\276Er\273\276a\230H\276Ez\210\276\305\300\001\276mZ\344\276W^6?\340r\337\275\014(\034\277\327\304\226\276Y\311\230>\363\324\354>\337\300\236?\034\334\233\277\005\357K\277\305\267\262\276>\t\037>\030\3714\2772\372\233\275r\314\255=\207\364\317<\352\244\037\277\3578C\275-\007\201?7k\266\276\"\360?\276\222\325\320<\367\034_?\372\300\032=M\210G?)\207\303\276\010\262\362;(\022\033\277\356\026\026>p\237\257\277 \231\177\273\364\004O\276\246\344G\276\'m\010\277\230\260`\277t]\317\277\220H\006?\264<\234>b\370^=d\n\200\276>\353\020\276\241\204L=\00568=}\336\211\276\347s\005>\210(\261\275\201-\026?m\017D\277q\265\207\277\021\335\017\276\221\342\340\275(\335\334\275\032i\245>uC\246\276I\334\215?\271\301\205\277\355\344\333<\241\337S\276@\0003\276\311\314\221?&g\232>=q\252\274\354As\276LX\241\277\003TT\277\265\272\026@G\316\252?\3015\221>#$\010@\370\032_\277\025\020\n\276A\'\273\276M\276\014@\364 \025\275\0359\252<\036\000\262=\223\243K\277\325\337\033\276]\337N\277i\027R=\357\374\210=\017\315\037\277v\300\272?\031!\353=Rw\024\277[\300\\>a\013\260\276\346\270+\277\025Rr>\325\373\240\277\206\002e=\343\035\370>\262k\276\274\272/b=\243WP\277!#j?\023e\332\276f\323\013\276\355\237z?;\267<=\346-\207\276\271Jd\276\371\325\256\276\023\007\214\276\245\251\224\276M\260\033\276\247\325\232\276\312q\205\276\304\252\021?j\315\236\276^\220\273\276L\260\247\277,\332l\275TR\277\276F\307@\276\001j\353\276\337\226\231\276E6\331\274mK\346\275\230\372u\276\360\004\241\276\261\312\007?\230\310^\276\205\355\266\2762s\007\274\000\200M?\260\203\314>K\264\034?8\346\030>>n\213\277\035\r\360\275im\226\276\336E6?EcD\276\303-:\276\236\306\330\275x\343\256\276+\373\311\277ph\246>\371d\335=\213I<\277\311\\i\277\337\255\307>\024U\212>-\031\241=\026\235\035\277\272\202\244\275\313\026\312=vdJ\276\247~\315><O\362\276\2026&\277\020\0323\276]\317\034?\010\206\026?ST.\277\3648}\276\377\372\264\276p\341\212\276\021>\001?4\321\376=f\374\320\275C\315\273\276}\n\247\276\321c\276=_\t\013\276\216\000\013@\363h\t\276\323\246m\276@\020=\276\340\370\321\276E\022\227?~%L\277\220aI\276Y\336#=\271\234\\\276\022\355w\276\246\242H\276v\321\227>\252i\332?\235\002\225?\235\247y\277<\262N\276\324\r*\277\334W\013\2754\037,\277\'\356c?f\216\345\275i\216\307>\215\352\343\276\370\3702\276 \355\256\276\341\215T>\332\300\023>(\024n\275\316Vh>\361\200y\275\000t\243\276\004C\356\277\001\034\272\274\\Cw?`/\231?\036>k?/lY\276t\214\214\277\352\r\000?\330`K>\315\030\231?\01348>1U\272\276\316\323\224?u\272\030;\310\331~>C\235\214?\352\365?\276\262\315\264\276\240U\303\277\372\372%\277\204\332\274\276\204)\250\276\242\343\216\276\002\200\254\276\342E\333\277\374\203\200\276\010=%>\340\273\205\276\236e\003\277c\366\010>\005*\333\276L\024\365=K\277\316\274G\374#\277/\323\241\277t\0372\276\357\366\210>\375fw\276\267\'X>\n\024R?\366\263K\276\022\352\024?%\267L>K\373\240\277\312\343\314\275=\201\264\275\354\'#?\006\007\204\277\2213\214>\037\376:\275\261\201%\277\370\210\001>\246\317\264\276s\231@\275Sl\023\275\336\365z\276\226\230\374\275\257\314\031\276\301\355\213\277\214\r\375>\017\005 \277\205\342o\276\207mo?\007\360\210?\246\t->\036\3054>\267E,=*X\340=b\332\327=(\302\217>\347\260\014\276\304\266\315=\222\206\244;\203Gr\276<\331\270=qQ\025\276N\'\217>T\177v\276aj7>s{\235=\345(L\276\362\300\234\274\210a\252\275\204\355\225> \370\002>\034PH\276M\202\220\276\351\035C>\241\014L\276\330\342Z>\312\260X>\374\300\363\2751\221\200\276\276,V\276\331\272\223\272"
      }
    }
  }
}
node {
  name: "dense_15/kernel/read"
  op: "Identity"
  input: "dense_15/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_15/kernel"
      }
    }
  }
}
node {
  name: "dense_15/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 30
          }
        }
        tensor_content: "\232\337\233\275\022X.\277w\221\357>\251|\016\276\265\375s>\027\034\"?\302\230\312\275,\263\323>\020\231\023?\376\033\002\275\177>\003?\035.\235>\024\375\231\276\207\210\035\277\276\017@\275R\261F\277s\201\317>L\313\321\275\000\n\370\275\253e\334\276\330\204\200\275\002\231\215\275t\317\325\275\006o\r>\313\213\223>\360E\215\275Q\363\335\275\240\227\375\276\\J\307\276\254\306\234\276"
      }
    }
  }
}
node {
  name: "dense_15/bias/read"
  op: "Identity"
  input: "dense_15/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_15/bias"
      }
    }
  }
}
node {
  name: "dense_15/MatMul"
  op: "MatMul"
  input: "dense_14/Relu"
  input: "dense_15/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_15/BiasAdd"
  op: "BiasAdd"
  input: "dense_15/MatMul"
  input: "dense_15/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_15/Relu"
  op: "Relu"
  input: "dense_15/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_16/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 30
          }
          dim {
            size: 10
          }
        }
        tensor_content: "h\006\224>B\014\254\276.n\227\276\262ti\276eg\270\276\370\207\230\275\334\377\213\275\214t\211>\240F\026\276\375\227\247\276\307\272\215>.\276\353\277\312\201^?\326=\324\277M\316\264\275\177\t\033\277\346R\035\276\351?n\276\304\320\266=o\267\302\276\242[\023=\246b\212?\342\3625\276|i\261=Z4\205\276Zm\236\274\212\223\035=A*\341\275/i\330>\021\375\251>\251\244S\276\204)\014\276@\352\203=\005P\337=\024\233\t>\353\0176\276\350fL=\333\371\256\275B\027\231\275Z\251\225\275\253>\246\2761\365\277>\345\237\243\277asg>\243n9\2765C\376\276#\361Z\276rgO<\362\305\000\277\225L\253>9h\221\275/\\\213\274\254\221\247\277\336\223S\276KC\022\277\010\206c\277\036\361\265\276\'\305,\300\272\344\343>\215\240w?\020\214E\276d2Y\2768\253\237?\262\375\350\276c\362\226\275\333x\227\276QQQ>V\332N>\377\t)@I\332\352\276]\265\243\276\341\020\226>Q|\335\273\310\372N?[>o\275\316\331\221>q\317\234\276\376\212\013?\037\373\274\275\035\312\017\2768`\240\276Q\312\264>\207U\351\276\223\000\311\276`\230\032>\224\346\277\274?\225\216\276\236\215\256\277\241\376\234\275>xU\276\357\301\305\276]\246\200=F\032\243\276\265\253\031<\034\345\201>R\001\301\276P\267\320<\214\016\325=(\335D\276\235\031\257\2761(\202<\267A\207>\257\306\226\300\211m\021=\251\332~\276\001\3758=\036\000~\276\255\216\214\300*\365T=\220\2101?\275`\264\276\321kF?\030\311\250?\257\323\242>d\203\346\276\265|\242=\357\205\330\276\354(\225>\033\005\337>\346\034\001?T\035q>M\204\304\276\305\232.<A?\244>\335Q\005\277.\206\315<\244}6>-\2501?TE\224>TRN>\205+\214\276\212q*>@&\203\276\362(\267\277#\344\353\276\335Jz>\0377\202\276+\347\017?\241\275\240>\271\247g\276\312\303\210\275\207\037\020>!Oz>\014\233p\276\026\244P>l\213\207=\344\341\\\276\022~1?\022\340\245\276\331@\254\276\204\375\212>\232\351\004\275N-C=\333\034\316\275SD_\276\321\257\255\277u\326\016\276\325\037\345\277\276\206\202\276\274\222\204\276\323\020\221\276\347\304\005?3\204$?S\322\324=a\334\272\276\033\016\314\277\274\373T=c\031\276>M\312\036?\241\254$\276.9\237\276#\275P>\261\252d\276;\322\360=P\217\204>\004\216}\276ry\247>@\335\352=\373\217\222\275\321|\001\275\200\013\003=\323B@>J\374\276=\262\217\022\276\032\211\225\276\203\336\322\275d\262\301=?\245\006\276`S!>\300\3221>\300\241\021>\335&\302>\256\223\033@\257\201\025?Q\356\224\276\361\272&\277\030\353\227>4\337\022\277\347\014\351>@\222\317=D\367\252\276\356\003d>\002a\212\276\371`\234>p\324\352\274\334>I>\304A\267>2\017\202>B\255d>w\356\310\276<\255\324=\001\202\023\276\2303\215\275\3451\365=\202\272\223>\205\263\237=\035\317E\276\\R\007\276\224\223\361<a#B>\364\322\225>\030>\234\275[\361\240\276\352\335\245\276`\022]>5\272@\276\244\r\302=Qx=\276.p\206\276.\013\n\276\320\377^\275\200`\035?\236`\360>\\\007\355\275\210\307\362\276Z\302t>_\003\241\275b\231T?s\363=>\355\334\240>\312\236L>!2\336\277\364f\205>\347\225\314>Uy\261\276\261\362\305=\371\030r>m\211\203\277\231\177(\275\234\371\203\275\3146(\275\024\325\364=\010l\262>\214\357O\276j\205j\276\"\033)\277\232V&\276\213\t\273<\335pf\275tU\024\276\300_\032>S\267\203\276!\2106\275\341\035\'\276\000\333G>C\036=\276P@\246\276\375\215\224\276p\335\026\276\370V\230>\017~g\275\1773\301?\243\251^>[k\'\277\263i\252>\214\364\024\276\224\313@>\367\231\250>\352\031\302=#7l\276\215\210\355\275\255Z\254\277~\014\345>\'\373\342\277\277e\233\276K\004\352\277\232\265\025\276\024\213\220\276\327C\000\277\275\244\233\276\324\301Y\276\025p\202\277\337\017\211\275\"u\005\277Ig\014>@\376\226?\212\031\300\276X7\223\277\247\007|\276\266P\356="
      }
    }
  }
}
node {
  name: "dense_16/kernel/read"
  op: "Identity"
  input: "dense_16/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_16/kernel"
      }
    }
  }
}
node {
  name: "dense_16/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
        }
        tensor_content: "\347G+\276AL@\277\331?n\277p\303Z?\354\213~\276\325\303\320>7k\212\275^\250\202\276\370V\346>C\345\016?"
      }
    }
  }
}
node {
  name: "dense_16/bias/read"
  op: "Identity"
  input: "dense_16/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_16/bias"
      }
    }
  }
}
node {
  name: "dense_16/MatMul"
  op: "MatMul"
  input: "dense_15/Relu"
  input: "dense_16/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_16/BiasAdd"
  op: "BiasAdd"
  input: "dense_16/MatMul"
  input: "dense_16/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_16/Relu"
  op: "Relu"
  input: "dense_16/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_17/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 10
          }
          dim {
            size: 2
          }
        }
        tensor_content: "^3\036?6.\346=\203\261\225\3004\346$\276\014\357\236\277j\363\031\277\227(g\277\233c\305>\350q\022=\r\375\205>\337\030\003\276)[\031\2767\273\332\276\253\026\363>\034yk\277\t\224\014\2771y=?\210s\231>I\207\020\277\361\302\301>"
      }
    }
  }
}
node {
  name: "dense_17/kernel/read"
  op: "Identity"
  input: "dense_17/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_17/kernel"
      }
    }
  }
}
node {
  name: "dense_17/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\212\372\214>b\330\246>"
      }
    }
  }
}
node {
  name: "dense_17/bias/read"
  op: "Identity"
  input: "dense_17/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_17/bias"
      }
    }
  }
}
node {
  name: "dense_17/MatMul"
  op: "MatMul"
  input: "dense_16/Relu"
  input: "dense_17/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_17/BiasAdd"
  op: "BiasAdd"
  input: "dense_17/MatMul"
  input: "dense_17/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_17/Relu"
  op: "Relu"
  input: "dense_17/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_18/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2
          }
          dim {
            size: 1
          }
        }
        tensor_content: "Sj\214>\001-\202\277"
      }
    }
  }
}
node {
  name: "dense_18/kernel/read"
  op: "Identity"
  input: "dense_18/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_18/kernel"
      }
    }
  }
}
node {
  name: "dense_18/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 1.6623512506484985
      }
    }
  }
}
node {
  name: "dense_18/bias/read"
  op: "Identity"
  input: "dense_18/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_18/bias"
      }
    }
  }
}
node {
  name: "dense_18/MatMul"
  op: "MatMul"
  input: "dense_17/Relu"
  input: "dense_18/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_18/BiasAdd"
  op: "BiasAdd"
  input: "dense_18/MatMul"
  input: "dense_18/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
library {
}
