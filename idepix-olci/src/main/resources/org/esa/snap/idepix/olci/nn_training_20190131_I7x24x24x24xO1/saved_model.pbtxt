node {
  name: "dense_33_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 7
        }
      }
    }
  }
}
node {
  name: "dense_33/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 7
          }
          dim {
            size: 24
          }
        }
        tensor_content: "\210\326\221\277\023\265\273=\221\324\233\277\370\264\325\276\300\234\267=\320\251\010\275\356\330\254< \256\364=\371\255R>gmp?Z\234\324=\320\233;>\216N\n?\347\336\206?\355\343\225\277\204\204\267\275\027\211\237>#\002v>\204o\n?\031\347\274>Uy\201?B\341\037?\354\"\346>\202\315\243>}\331~={\257m\273\027v\016?\030\225\206\276M\377Y\2763\361\324<\036\262*>h\031\004\275\241#\020\277\252\277\333=(\332.\276v\004\024\277\205\204\370\274\004\021\335=\315^\324=:\370\006\276\310\270\022\276\255SF>\220\355\211>\030\367\251>2nK\277R\340\260\275\332\336\007>\215\2044?\244\260\005=o\234$=\314L\352<}\353R;j\3229\276\035\322\001\273\371\324\244<\254{\274\275\234\217>\275\316\242r;\336 :\276\201\213\212\275\nU\212\274\017l\242;5L\327<\222\200\021\276d\265\323\276*\327\270<d\303\200=C\030y\275Q\026c<\321\216\204<\267\027\353\274\273d\221>\211\216K@9L_\276\205Q\360?!a?>p2\256<<f\000\276&\032!?\217\265\334\276\204r\327\276\330BA?\224X\207=\213\267$\300S\014\316\276\350\341\214\300R\364t@\270\375\300>\250\350\211\276]*\023\277I\215\337\277\346^.?a\207\245\274\010\242\305\276\316\324\005\277\016\266B\277\2315\327\276\374\321F\277\377q\263\276\371\347\301>\230i\224\276qfm\277=\213n?\020\275\213\275nf\t\277\"w\253>k4\220\276\252\357\254\276\234\202O?\306\355\r\274\306-\321=\320\211\214\276\356\273\300\276R~3?\021\331\005?Uz\177>\"93\277\261\321I\277~\336\024?.t\260>\233 \000\276\004\225m?\355\006\333\276},\222\277\240\016\242=\262g\201?G\205\375\275\351%\250\276:\000R?\266S\202\276\026\326\253>\352\343\370>2\245\306\275@?\177=\336\t\234\276\266\234\265>\337\272\034\276\177Pr\277\235\265\000?\342\365B\277\210\225\235>\233\n9?\232>\352>\377\'\005\276\350\005\220\277\265\204\340?\2522\230?l\251\322\277\274\272\207\276\022w\335?\341\312\232\277\230$J>/\326\006@{\350\244\277NP$\275\'\254\003?nU\272\277h\000j\277\344q\352?\350\267\303>{q>\276\033\323\332\277\205a\243\277$|\341\277\375J\247?\217\317\237?}0\005>_\177n\277"
      }
    }
  }
}
node {
  name: "dense_33/kernel/read"
  op: "Identity"
  input: "dense_33/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_33/kernel"
      }
    }
  }
}
node {
  name: "dense_33/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        tensor_content: "eM2?\244\366\315=w\234\"?\231\333\225?\000\000\000\000\026R\235>\204\213:\277\000\000\000\000\336\370\255>\227\324\333\276\r\322\030\275*it?\263\335=\277+V\340\275\316\034\257\275\000\000\000\000*\233\356\274\246\010\357\275\026v\202\277N\2738\276\355\324\307>H\310_>lc\263\277\311\240\216\277"
      }
    }
  }
}
node {
  name: "dense_33/bias/read"
  op: "Identity"
  input: "dense_33/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_33/bias"
      }
    }
  }
}
node {
  name: "dense_33/MatMul"
  op: "MatMul"
  input: "dense_33_input"
  input: "dense_33/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_33/BiasAdd"
  op: "BiasAdd"
  input: "dense_33/MatMul"
  input: "dense_33/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_33/Relu"
  op: "Relu"
  input: "dense_33/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_34/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
          dim {
            size: 24
          }
        }
        tensor_content: "2\307\021?\017P\004\300?\304\373\276K=\033\276\364wn\276\366vt?\217\336\"\276\232\000\037\276\035fX\301\362uj\300R\344\357\276L\234\026\300\337GB@\273\317<>\037\220\256\276;\323@>\002\020\267\277X\'\351\276\tc\200>_\366\t?+L\301\276\327\350\202>\361\221p?\301k\375>\344\246\351\276{\320]\276\235\013%\277\355LV?\3021,=m\363=\275\323\242<?\302\374\265\276\360y\202\275\232\037\201?\272\200\320>\032[\226\277A}\211\277f#\217=\"\341\216?\333\244<\277\276\031P?<\2427\300[?R\277\017\031|\277\321(\255>fS\336\277\263d\375>n\372\036?\200\271\201>\302\364h>\323\361\352\275\227sC>[\307\234=Im\204\277U \200\276U\3524\276\247zb\277\2478\020=\3065\361>[\224]>U\231\034\276\212\326\003?y E>\3121l>\005@I>\242\306M\276\337{\022=\037\2315?\301\247\326\276\027\234\217>\2064\321>TC\207\277\221\241\177?\243~9\276\205W\327\276\247:\027=\023\267f\275%\320\277\2777qU\276\234\200X\274\252\021\375\277Hm\022\276\311sB>\220\257w?\377\327\217?\334!A>\244\265?\277\376z\001>\225t\201\277[\202\216=\244]\002=\037\036\236?\271u#\277\320G/?W\341\211\276Iu]\275%\215\240>\245\024\026\2760\231[=\200\271G\274\360\020\226=\340\316\252\276| \337\275@\037\316;\001\310\212>\224\336\241\276\000N\376\272\360<\321\274\035N\213>du\305\275\325 h\276\310\023\235\276\260\227\013=\314\266\211\276\256\306e>\300B\374;\340\325\264=\265s\262>\014\335{\276\035\352\225>\030\273&=\255\326\326?+C\232\300\375\251\215@\223\034\'> \312X\277\230n\305=\246\220\257\276f\210\271?\0146\037@\331\301\276?\230\241`\300e\001\231\300\302\375(\300\222\033,@1\003\224>\007\321\214@\0060\263?\361\2169\300qj\231\300\010j @\220\225\336\277\031\026U@\016\206!@2\247\233\277\250\261\022?.\272G?>\233\256\276X\226\256\276\256u\"?\300\224:\276\344\327\260\274\272\326\245\276=@\013\277Iv\316>\037\256\r=\232\337+>\241\317\260>*\002U>\n\345\261>\035\353C=\017\301\032>e\027$?\271;P=\345\326\027\277\320\304n=\203G\022\276s\320\212<7\t\202>3\245g\276\000\205\207\272\264\305\200\276\323Y\200>\260c\312\274\370\226\354\275\304\357\214=\220L\307\274\207A\232>\361n\212\276\247f\207>\356\315\203\276\375\347T\276\210W\353=Gf\262>\375\216\240\276\270\3527\275)B\227>\303i^\276\270u\301\275\277]\201>\213+\"\276\346(->\374\213\023\277\350*3\277\362\367\253=TU!>\326\341\356\274\223\236\020?\233\323j\277\320\023\222>\357f\224\277\372\335C<Y}\224>m]\303\276r\215\026\277\362aD\277\221\304\344>\302d\304\276\276\256\274\274\nz/?\373R\206\276\326Y\252>\3650U>\021\220&?\301\334,>q\374\325=\2424\376>\327:W\277\006\027\240\275LI\313\275f\317\347\275\275\177\231>\025g\267>\230S\277\276u\326\352>\332 \221>\274\025\323\276\"&5=\262P\014?\377\013\355>\213\231\177>H\235=\300|\256a=\007\353a\276o_\244>\002]u\276\343\246\361\277U\306\340<>\322\232>\300\031\264>\034s\253=e\305\263\275&\333E>\316*{>\340{W=z\030.>\271\370\262=\\\242\203=\024rq\276\362&\214>\311v2>\206\317\">z\343+<w\365U>J9 >\257Y\223>\277F\025=\255\265\225>b\2427>2\322E>\272\372\234\276\367Lj>\031\306\001>S`\215\274\0316\303>b\365C\275\007\240\306<\023\341\233\273\"\177\202>\350\250j\275\227\006\265?\255\223\267\275O\025#\300\000\262\244>\305\337U\277\035\343 \2772\300\356\2765\301\363\276\027\276\334\2767:\020?O\220$\275\035jq\276\260v\326\276\215\351=\276\036\374\305?\371\334\316\277\031}V\276=\236z\276\373\362\305\276pY\226\276}\220T?K\307!\277\226\233n\276\232\372\210?\202\001\302>!\211u\276\332\244\000>zP\306\276\035\305\036\276\221\010N\276}\'v>\263+^\276J~&>\035\0015\2772\024\017>\336\311P>S\371\312>\265\267\r\276]B~\277\205o\245>Z\370b\276\\\221\364>(6\351\275X\007?\275\274\257B<\007Dq\276\360\245o<\261\364W?\265\203m\277\326\375\225\276v?t?\004\254\204\276\3756\264>\"\"\373<\300Z\031?6H[\276\270\242B?\004EI\277\325\377\000\277\037\353\307\300M\355#>t\'P\275\373f\247?\200C\251?\2259\334\276:/\035?\033\306]>5\331\334\2761\265\315>\3656d\275\264\212q\276mS\311\276\216\354\013\300W#\225\276\231\354\364\277\217\222\365\276\254\343i?\224\227\025?\2310\307=\266#+?\336\223s?`\344\322>p\206}\276AP4?\3775h\275j\3104\277P\256B\300\216\013\204>\242l\337\275\215\3138\277x\363\250\275\300\211\365<.|\361\275p\244^=\004\272\220=\340\256 =\201\324\235>\335u\214>/\037\227>\200j\n;|\177\217\275\271>&\276m\017|\276\360\310\205\276`\266\313<\350\220A\275x\'\002> \355\241=\275\244\037\276\014\272\200\275p\036\324<\360\323\321=y\353\235>\022\331\221\276\265\356\333\275d\313\306=d\322n>\370mg\275Z\030J>\310Q\032\275\367\020\271\273dl\016>\253H\216>\006ha\274\355VS=\314\217\235\276-\013\034>\344\226\210>H\356\r>@\034\242\274\214|\302\276\204\247\266=\327\217\263>\220*\020\275\366\027\034\276\006\007\265>\350Q&>\326\336\227>T\332\302>\347\223\332>\264\'<?\275<M\277_\002\270\276o\242\017\277L\276\002@-WS\276\006\316\332?\273\221X\277=\225!\275\311\244\004?\315\330O?K\307D>2M\247\277\260)\'?\3557\314\276\370#E\3004\230??`\020\323?4;y>\315\264$>\302\000\313\276\250\210\023\277A\033\242\274>\227\320\276\310\t-?\213a\261\276\324\312\206=\232{\010?\024\250\214<4,\210>\317a\002?\223\377x\277\375d\336\275s\0229<\213E\024?\233A]\277\242\266\225\276\227/\242>\323*i>F\310\027\277V\350\030;\314\316\311=\0028\233?\353\250\251>l\372\302>\230WL\277\256?r>\236\317i>W$3\275m\003<\276M\034\000\277D\311\327>\023\212\346>|\213\260\2756D\265>\374Zj\276<X\334\276\332\201M>k\032q>}\310\032>\262#\303\275\245q\265\276n\002?\277\306V\322\277\205\267\035\276\246\277^\275\242\211\005>>q\216\276\377a!?=`V\276\347\001\266=\273\027r?\234\\\315\276\305\313c>l\374\364:)\227K\277\001\017\362\276\200\253\000\275\337o\236\276D\335\374\275\r\331R?\001\360\301=\333W@\275\257Q9>\225\317\277\276\001r\207\300N2O\2760\343@>\234\335i\276\320\207\004>\\m\207\275\2629\022>\232\317~>x\362\035\277\333t\253>\244\310-<\306\3747\277\256L&?\017\231\216\276\206\303\374\277\006\271\252>\030x\026\276%\243\370>\223\340\'>:\361Q\276{\014\245>S;\377\276\231cO>\271i\271\274\t\260\260\277\320m\025?p\227\314\276\312Z\270\276_\204\035?\306\"\006\277\177h\201\276:\227\335>\2709\300\277\211 \250\277\031?\202\275<\006\226=\200\333\261=\312\236Z\276\034\253t?h%\331>\036D\224\276\357!\276;\211\311Y\277/\371=?\036\315(\276\321O\256?\335\221C?\211\352\321<(\272$=\366\375\215\276\241ld>\367\313\346>\302\305\305\276\344& ?\245]\203\277ms\233>\034\270\241\276\257\003\365:5\372H\277\210\360\304=]\244C\276[,q>\320ed?v\316c>\336\241\245\276d\343\275=\213\351@>\010\3233?,\014\031\276\036\341\027\275\002n\317\276Z\316\016\276\236;H>\337\004D\274\365P\334\277\203M\307=\344qu\276\254,8?\034\232\206\277\301\036\017\277\217Rp>"
      }
    }
  }
}
node {
  name: "dense_34/kernel/read"
  op: "Identity"
  input: "dense_34/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_34/kernel"
      }
    }
  }
}
node {
  name: "dense_34/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        tensor_content: "CV\251>{\246\210>\007\326\272\276\327\264\256>F\003\323\275\017\'!\277\006\324h\276\373>\223\275\003\357\321\275\310\303\001?nZ\305\275\214/\210>\201\356\274\276(\324D>\227\274\260\275S\216\256=f.-<\370\177\216>\302\216\216=kN(>c\370\245\276\332\004:>\271\344\321<]_\274>"
      }
    }
  }
}
node {
  name: "dense_34/bias/read"
  op: "Identity"
  input: "dense_34/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_34/bias"
      }
    }
  }
}
node {
  name: "dense_34/MatMul"
  op: "MatMul"
  input: "dense_33/Relu"
  input: "dense_34/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_34/BiasAdd"
  op: "BiasAdd"
  input: "dense_34/MatMul"
  input: "dense_34/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_34/Relu"
  op: "Relu"
  input: "dense_34/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_35/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
          dim {
            size: 24
          }
        }
        tensor_content: "B\334\350\277\006bY>\317%(\276=,\366\276N\036\006\277%\241-\300\363_\264>w\363\t\274\217\010G\277\340\r\016?\320\272\206?!\351\242\275\"l\244?\245\267\231\276\215Em\277D;\032\277\246\347~\277\233\372\223\276\374]\315\274\376\364\236\276\014\264}\276(B\010\277~\335\033\277\302x#?Mi\022\277\320\006\346>\260\236!?E}\\?.\362\373\275\235\216R>\262\025\213\277D\231A>\221\035e>m1\205\277\355\306>\275R\224|>\254\250B\277\207\001\305\276\272}\000\275\023\346\332>\374\033\223?/\002\025\275\333\013\211\276\216\317h?V\376\317>\207\016\234\276!\341\352\275\355Ed\277\034\243\215?\214\213\360\277\205:)\277\341\244:\277\341\303!?\215\324\363>@\343\315\276\030\321\221\275F\216{\2765\254\217\276\222\3476\277qe\217\277\367\2231?\204\377Y\276\314\365q\277\225\353\237\277\224\246\333\276Ni\270\276\316\347:\275\311^|\276\3351\241\276\215\026\330>)\373y\277\262\037\211?\316\t\201\300\017gZ?]\'\264\276N\367\301>\316c\245\300\354\374\256>GhW\276kw<\276\236\323\206\277\357\232a\277\326\350\204>\203\341u?\263\266\035\300\\\344\215\274\023[\325<\246\325\253>\227\242/?\304\3561\276pe\013\276\023\331\013>\021\377[\277\212\321\235\277\301\321|\275u\200d\300\3327\262=\000`\314\275\226\202z>^\214\240\276\335?\037\276\347\010n\276@\032\205<\226\343\232=hE\257\2759?\237>\003F\226\276\'/,\276mz_\276@\310\312\274U]\034=#\273\302>T#\237=\n\024C>@\307\224\275\r\022o>%^#\276P^\265\275z\211\353:KC\273\276\253\035\331>\346\271\302?\014dH\277q\347\334\277\374j\301<nA\340\277\216A\245\277J \256\276\373R\241=\030[\002?,\"L?\351\240\320\277\377\272M\277\331\332A\276\314\244\364\277\245\373\234\277AO\311\277\337\301\214=&\017$\276\2579\332\276r\215c=okb\277\314\264\353\277\357\324:\275K\313\'?\022;\002\275O;\004\300\201\247\212\276\006\245]?\314R\220>8\217%\276]\353m>r7\007>\0012\311?\235YH?\342\232\236\2763\340K?\236f\305\276\313e\207\273\350J\222\276!O\022?\352n,\275o,\303\276\370a\034\276\036r\324>\025\304\r<\313\002+\276\264\204\024?oj5>;\307\351=\320q\237>\373HL>\261w*<HT\355\275\236UK>?\256\251>\377\364\303>\301&\033\276Q_<>\233\362\254=\320\274\310=j.n>\233\0243\276\265\272\223\276b\362\202\276pvl\276S:\257>\214\265`\276\3238?\276 \030l=\223\265\200>1 \235\274\371Li>\025L\220\276Sr\377\300\2248D?l\241w\276\363W5?\245\363;>4^\365\275\222\023\240>\220\304\320\276\177\213\343\276F \355=\347\202\344\276\261\363\326=\024#Y=\237jX<7g\220\277h\264X\275\3702.\276Q\t1\300\321\037\341\274\333%]\275\267?l\276+\364r\276\265\201\222\300)j\r?\254\0237\277Z\n\234\276\032^W\276\276\177\340\277`\323\004\277=oL>\305\356\000\277\374[?>\345\010\361>\264\301\250=\220-\217>a#A\276\"\023\212\277\274\221\235\274V\025\240\273x?[\276\020\304;>\270=R\276\374\235\241\276\274\354~>\214a\270\276(\216\221\276\034\020\302>\252i\014=N\027\007>F5\276\275C\347\221\276\344:\331>\315\332\221\276w\254\020\276@\365P\276\256\233\274\275>\202\330=\330p\203>\223\270l\275\275\354\232\276o<\'=\031\006.>\026\362\300?\372\347\231\274i\253\230\276\020\267\211\277\237#\220>8\264\367>\036f\215=\372\212\337\276d\377O\277\375\224\204>\346\013?\276\2439\277=\316\230\246\276\037]\202\277\265\327\025>\303i\254\276\331\236$?\206Z\346>\332d,?F\361\"\277\n\220\360=\260\177\225=\251l\177\277G\n\016\277BF\226\277\234\3169\276x\360}\276\332(p\277\216\253\250\276;W\322\277\355*\220\277]\014\232>\332Y_?LNb\277\342\322\365\277m\034\007\277sG\200>\344\333}?{\237\315\276i|\212\276\321\251(\277>\'\233>\316 M\276\004\354\377\276|n@?\234\t\305\274Y\365P\277\240\3606\277\330\224,\276\021\013\317\276\372]y<}\3270\277z>Y\276\207S><v\265s\277Z\306\237>\224\037t>d\2502>\024\216\247>\250\236\265\276v\017\215>\215\030B>\2535\311\276\2340V\276\277\247\027?\356\226%\277~k?\276\206\256\375\276~.\340\276\346\002R\276\306\013\007\277h\254d\276\002\247\020\276\371 \370\275Z\356\360\275\n\330\273\277s\021\271>\227\326H=\216\327\244\276|\363\316\275\260\244\213>)\234H\276\021`\027>\304\262~?\267\253\004?\250\245P?\331\"\215\275\034\3144\275\230D\220\277:N`\2748#f\277\354\0224?\tL\205>|\216\223<\026h\025?`\342\034?\026\257E?\037K\221\276\261R)\276\277\326)>L0\360\276\251-\375\277\312\0336?H\273>\277\006Uj\277@^y>[~\315\275\311l\016>6B\211\277,\265|\277\272\026\216\275\323J\021=6\376\347\276x\270\345\2759\340\247>\027\323\206>7\234\222\275\321\300\205\276:l\313=H3d\276\331\206}>\320U\347\274w\246\226\276\237h\244\275\307\020(\277+)\255?\222\306\301>q\353\361\276\035\022\220?\214\274\232>\251\345\315>\2403B?\373\200\022\2767(g?\330\221\350\277,\"\270=x\371:?i\034J\276\373W\031\2762@=?\350\227d\275]M[>%*\252> \014=?|u\243\277\355v\321\276clx\275M\032\327\274\305\037\246\275[\243\204\276!}\206\276`\376\025\277\030\307\227?\377\325\n>ZI%>}7\322>g\311\006?\266g\264>\005rW?\304\247\237\276\033\375\240=1\321\224>\246<\342=/\227\225>\3721\206\276\266\255@>\013r,?\205t\207>\273r\207\275Ar\234=\373\010\200>S\315\250?\214?P\277\227~\360=\222\034\235\276/\346\345=t\367?;\243\020\376\2769\253\036>(\223\n\277)\374\205=\354\022\340\276C\263\227\276\331\234\340\275\300\025\317=EJ8?W\252\351\276>\rl\276^&\017>\r\024\200>\034+\007?\333\270\361\276\262\n\202\276\023kL>x\031\273=\252N\327\277\233\211\212>.&\242\276`\207\376=\241S\366>\344&\003\300\205\377j>m$`\276\343\025-\277\2612d>\274a\030\276S\232[>\371\262\363\275\204L\340>\272{\'>\003\350f?\334\242!\277Z\353\361>\204|\250\275\240\354\312\277R\372\335\276\364\276\020?\271\020\201\276n\360k=\374\251G?\357\222\335:\275z\212>E,I\277w%_>\230k`>\352\222\223\275\265\216\007@\020\327\374\277\'}\036@Y\017\204\300\000\025\247?\227\250\250=o\364\366?\375~H>\353\016\203?Pi\n\300u\334\020\277a\016M<\314\005\210\300\336lW\277\177\337\361\277&\270\023>\270A\242\276\251y{\277\013aS?\353\300\235\277\245\224\357\277\201\202&?\273\313-=\200\357\357>\014~\034\277\353\330*\277H\014I?\37292\277\364\326\205\276\002n\037=\365\220q\277\200#\361=\025\216\276\2746\331\010\276\353\2603>S\273&\276\343\026\331=\364\005\267\276u\345\307>\177T\257=\323\210A>;\377\365?\335\304\006\277\'\210\254?Y\220R\275?e*?\311\243\262>W\375&>\275\372:?n\251\307>>\364}\277\342\222\006?/\2428\277\320\207\340\276*\325(?\337\"\207\276j-\262;\350\347j?q\272\323\276\354\017\274\275\367\030*?\020ot?\027~0\277\036\371I=\350q\274\276\350V\300\275\021)\240>\r\241\331\276\370S\003?r\216)\277\2725\313\275\260\312\253>\223U\034?FRT>R\006\n\277\273[\"?\023;>:\302J\261\276S\255\025?\211\220\327\276\261\347\230>V\267\372>\360\nt\277}\375\201\276\343i\016=\037\025\320>\030\301\334>\351\0218\276\302\351\247\276\037\344\336>\3413r?6\204\247?\206%&\276C\334\026\277"
      }
    }
  }
}
node {
  name: "dense_35/kernel/read"
  op: "Identity"
  input: "dense_35/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_35/kernel"
      }
    }
  }
}
node {
  name: "dense_35/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
        tensor_content: "\'H\244\276\276y\275>\306V\246>hd\010?-\364\201>\350\225\205\276\202\245b>g(\355\275u)\253=\256T\253=l\257\021>\243\256\375>1\017F>\272\023\202\2750\207\r?\334\253\035?\211 \266>\312\245\220\275\n\300\360\274R\255\032?\234\300Q?\000BI\276\357\245c?<\242\265>"
      }
    }
  }
}
node {
  name: "dense_35/bias/read"
  op: "Identity"
  input: "dense_35/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_35/bias"
      }
    }
  }
}
node {
  name: "dense_35/MatMul"
  op: "MatMul"
  input: "dense_34/Relu"
  input: "dense_35/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_35/BiasAdd"
  op: "BiasAdd"
  input: "dense_35/MatMul"
  input: "dense_35/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "dense_35/Relu"
  op: "Relu"
  input: "dense_35/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dense_36/kernel"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
          dim {
            size: 1
          }
        }
        tensor_content: "\237\217\270>\35544?\242\256\242>\364w\n\276\311\355->\352u\317\276\261\001\232\276\276F\003>\r\330S>\026r:>\364)q\277\000G\331\276(\314V>x\365\337=jn\235\276\211\256\302\276\305.A\276\366d0;\245\027\023\276\354U(\276e\324\264>j\327\265>^\340\201\276s\357k>"
      }
    }
  }
}
node {
  name: "dense_36/kernel/read"
  op: "Identity"
  input: "dense_36/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_36/kernel"
      }
    }
  }
}
node {
  name: "dense_36/bias"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
        }
        float_val: 0.688647449016571
      }
    }
  }
}
node {
  name: "dense_36/bias/read"
  op: "Identity"
  input: "dense_36/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_36/bias"
      }
    }
  }
}
node {
  name: "dense_36/MatMul"
  op: "MatMul"
  input: "dense_35/Relu"
  input: "dense_36/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "dense_36/BiasAdd"
  op: "BiasAdd"
  input: "dense_36/MatMul"
  input: "dense_36/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
library {
}
